apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: dbaas-operator-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: mariadbconsumers.mariadb.amazee.io
spec:
  group: mariadb.amazee.io
  names:
    kind: MariaDBConsumer
    listKind: MariaDBConsumerList
    plural: mariadbconsumers
    singular: mariadbconsumer
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        description: MariaDBConsumer is the Schema for the mariadbconsumers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MariaDBConsumerSpec defines the desired state of MariaDBConsumer
            properties:
              environment:
                description: These are the spec options for consumers
                type: string
              mariadb_database:
                type: string
              mariadb_hostname:
                type: string
              mariadb_password:
                type: string
              mariadb_port:
                type: string
              mariadb_readreplica_hostname:
                type: string
              mariadb_user:
                type: string
              service_mariadb_hostname:
                type: string
              service_mariadb_readreplica_hostname:
                type: string
            type: object
          status:
            description: MariaDBConsumerStatus defines the observed state of MariaDBConsumer
            type: object
        type: object
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.4
  creationTimestamp: null
  name: mariadbproviders.mariadb.amazee.io
spec:
  group: mariadb.amazee.io
  names:
    kind: MariaDBProvider
    listKind: MariaDBProviderList
    plural: mariadbproviders
    singular: mariadbprovider
  scope: Namespaced
  versions:
  - name: v1
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        description: MariaDBProvider is the Schema for the mariadbproviders API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MariaDBProviderSpec defines the desired state of MariaDBProvider
            properties:
              environment:
                description: These are the spec options for providers
                type: string
              mariadb_hostname:
                type: string
              mariadb_password:
                type: string
              mariadb_port:
                type: string
              mariadb_readreplica_hostname:
                type: string
              mariadb_user:
                type: string
            type: object
          status:
            description: MariaDBProviderStatus defines the observed state of MariaDBProvider
            type: object
        type: object
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dbaas-operator-leader-election-role
  namespace: dbaas-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: dbaas-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mariadb.amazee.io
  resources:
  - mariadbconsumers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mariadb.amazee.io
  resources:
  - mariadbconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mariadb.amazee.io
  resources:
  - mariadbproviders
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mariadb.amazee.io
  resources:
  - mariadbproviders/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dbaas-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: dbaas-operator-leader-election-rolebinding
  namespace: dbaas-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: dbaas-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: dbaas-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dbaas-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dbaas-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: dbaas-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dbaas-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dbaas-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: dbaas-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: dbaas-operator-controller-manager-metrics-service
  namespace: dbaas-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: dbaas-operator-controller-manager
  namespace: dbaas-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.4.1
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: controller:unique
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
